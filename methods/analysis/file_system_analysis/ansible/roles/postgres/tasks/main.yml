---
# Tasks for installing and setting up postgres

  - name: Installing postgresql
    apt:
      pkg:
      - postgresql
      - postgresql-contrib
      - python3-pip
      - libpq-dev
      - python-ipaddress
      update_cache: yes

  - name: upgrade setuptools
    shell: pip3 install --upgrade setuptools

  - name: psycopg2
    shell: pip3 install psycopg2

  - name: werkzeug
    shell: pip3 install werkzeug
 
  - name: Starting and setting running postgresql after boot
    systemd:
      name: postgresql
      daemon_reload: yes
      enabled: yes
      state: started

  - name: Create postgres user for fimetis
    shell: sudo -u postgres createuser -s {{ pg_user }}

  - name: Create database for fimetis
    shell: sudo -u postgres createdb {{ pg_db }}

  - name: Create linux user for accessing postgres role in db
    shell: sudo adduser --disabled-password --gecos "" {{ pg_user }}

  - name: Copy init database file from role
    copy:
      src: "{{ role_path }}/files/init.sql"
      dest: /tmp/

  - name: Copying import_super_admin.py in /tmp/
    copy:
      src: "{{ role_path }}/files/import_super_admin.py"
      dest: /opt/backend/

  - name: Chmod +x superamin.py
    shell: chmod +x /opt/backend/import_super_admin.py

  - name: Init fimetis tables
    shell: "sudo -u {{ pg_user }} psql {{ pg_user }} {{ pg_db }} -f init.sql"
    args:
      chdir: /tmp/

#  - name: Cleaning used init database file
#    shell: rm /tmp/init.sql

  - name: Grant priveleges
    postgresql_pg_hba:
      dest: /etc/postgresql/10/main/pg_hba.conf
      contype: local
      users: "{{ pg_user }}"
      databases: "{{ pg_db }}"
      method: trust
      create: true

  - name: Restarting postgresql 
    service:
      name: postgresql
      state: restarted
   
  - name: Importing super admin user to database
    shell: "source /opt/backend/venv/bin/activate && /opt/backend/import_super_admin.py --user {{ super_admin_login }} --passwd {{ super_admin_passwd }}"
    args:
      executable: /bin/bash
 
#  - name: Move generate hash to tmp
#    copy:
#      src: "{{ role_path }}/files/generate_hash.py"
#      dest: /tmp/

#  - name: rights
#    shell: chmod +x /tmp/generate_hash.py

#  - name: generate password
#    shell: /tmp/generate_hash.py --passwd {{ super_admin_passwd }}
#    register: hash
  
#  - name: print hash
#    shell: echo {{ hash.stdout }} > /tmp/test.txt
